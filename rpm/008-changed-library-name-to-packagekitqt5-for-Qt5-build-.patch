From 873ed9b7e65b8e35b7033d1c7198860e1c9d2360 Thu, 1 Dec 2016 10:34:13 +0100
From: Martin Grimme <martin.grimme@gmail.com>
Date: Sat, 13 Jul 2013 11:24:12 +0200
Subject: [PATCH] changed library name to packagekit-qt5 for Qt5 build. properly connect and disconnect signals in Qt5 build


diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index e431876..e52056a 100755
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -72,41 +72,41 @@
   qt5_generate_moc(transaction.h transaction.moc)
   add_custom_target(mocs DEPENDS daemon.moc transaction.moc)
 
-  set(PKGCONFIG_REQUIRES "Qt5Core, Qt5DBus, Qt5Sql, Qt5Xml")
+  set(LIBNAME "packagekit-qt5")
 elseif (Qt4_FOUND)
   qt4_add_dbus_interface(packagekitqt_SRC ${PK_INTERFACE_XML} daemonproxy)
   qt4_add_dbus_interface(packagekitqt_SRC ${PK_TRANSACTION_INTERFACE_XML} transactionproxy)
   qt4_automoc(${packagekitqt_SRC})
   qt4_wrap_cpp(packagekitqt_MOC_SRC ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
 
-  set(PKGCONFIG_REQUIRES "QtCore, QtDBus, QtSql, QtXml")
+  set(LIBNAME "packagekit-qt2")
 endif ()
 
-add_library(packagekit-qt2 SHARED ${packagekitqt_SRC} ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
-set_target_properties(packagekit-qt2 PROPERTIES VERSION ${QPACKAGEKIT_VERSION} SOVERSION ${QPACKAGEKIT_API_LEVEL})
+add_library(${LIBNAME} SHARED ${packagekitqt_SRC} ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
+set_target_properties(${LIBNAME} PROPERTIES VERSION ${QPACKAGEKIT_VERSION} SOVERSION ${QPACKAGEKIT_API_LEVEL})
 
 if (Qt5_FOUND)
-  add_dependencies(packagekit-qt2 mocs)
-  target_link_libraries(packagekit-qt2
+  add_dependencies(${LIBNAME} mocs)
+  target_link_libraries(${LIBNAME}
 		${Qt5DBus_LIBRARIES} ${Qt5Sql_LIBRARIES}
   )
 elseif (Qt4_FOUND)
-  target_link_libraries(packagekit-qt2
+  target_link_libraries(${LIBNAME}
 		${QT_LIBRARIES}
   )
 endif ()
 
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packagekit-qt2.pc.in
-  ${CMAKE_CURRENT_BINARY_DIR}/packagekit-qt2.pc
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${LIBNAME}.pc.in
+  ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}.pc
   @ONLY
 )
 
-install(TARGETS packagekit-qt2 DESTINATION ${CMAKE_INSTALL_LIBDIR})
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/packagekit-qt2.pc
+install(TARGETS ${LIBNAME} DESTINATION ${CMAKE_INSTALL_LIBDIR})
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}.pc
 	DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
 )
 install(FILES ${packagekitqt_HEADERS}
-	DESTINATION include/PackageKit/packagekit-qt2
+        DESTINATION include/PackageKit/${LIBNAME}
 )
 
 add_subdirectory(modules)
diff --git a/src/modules/CMakeLists.txt b/src/modules/CMakeLists.txt
index d97a84a..fce01bd 100644
--- a/src/modules/CMakeLists.txt
+++ b/src/modules/CMakeLists.txt
@@ -1,15 +1,21 @@
 # CMakeLists for PackageKit-Qt lib extra modules
 
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packagekit-qt2-config.cmake.in
-  ${CMAKE_CURRENT_BINARY_DIR}/packagekit-qt2-config.cmake
+if (USE_QT5)
+  set(LIBNAME "packagekit-qt5")
+else ()
+  set(LIBNAME "packagekit-qt2")
+endif ()
+
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${LIBNAME}-config.cmake.in
+  ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}-config.cmake
   @ONLY
 )
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packagekit-qt2-config-version.cmake.in
-  ${CMAKE_CURRENT_BINARY_DIR}/packagekit-qt2-config-version.cmake
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/packagekit-qt-config-version.cmake.in
+  ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}-config-version.cmake
   @ONLY
 )
 
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/packagekit-qt2-config.cmake
-	${CMAKE_CURRENT_BINARY_DIR}/packagekit-qt2-config-version.cmake
-	DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/packagekit-qt2/
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}-config.cmake
+        ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}-config-version.cmake
+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${LIBNAME}/
 )
diff --git a/src/modules/packagekit-qt-config-version.cmake.in b/src/modules/packagekit-qt-config-version.cmake.in
new file mode 100644
index 0000000..78200a1
--- /dev/null
+++ b/src/modules/packagekit-qt-config-version.cmake.in
@@ -0,0 +1,12 @@
+SET(PACKAGE_VERSION @VERSION@)
+IF (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
+  SET(PACKAGE_VERSION_EXACT "true")
+ENDIF (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
+IF (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
+  SET(PACKAGE_VERSION_COMPATIBLE "true")
+ELSE (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
+  SET(PACKAGE_VERSION_UNSUITABLE "true")
+ENDIF (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
+IF (PACKAGE_VERSION_UNSUITABLE)
+  MESSAGE("VERSION CHECK FAILED FOR ${PACKAGE_FIND_NAME}. WANTED ${PACKAGE_FIND_VERSION}, HAVE ${PACKAGE_VERSION}")
+ENDIF(PACKAGE_VERSION_UNSUITABLE)
diff --git a/src/modules/packagekit-qt2-config-version.cmake.in b/src/modules/packagekit-qt2-config-version.cmake.in
deleted file mode 100644
index 78200a1..0000000
--- a/src/modules/packagekit-qt2-config-version.cmake.in
+++ /dev/null
@@ -1,12 +0,0 @@
-SET(PACKAGE_VERSION @VERSION@)
-IF (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
-  SET(PACKAGE_VERSION_EXACT "true")
-ENDIF (PACKAGE_FIND_VERSION VERSION_EQUAL PACKAGE_VERSION)
-IF (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
-  SET(PACKAGE_VERSION_COMPATIBLE "true")
-ELSE (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
-  SET(PACKAGE_VERSION_UNSUITABLE "true")
-ENDIF (NOT PACKAGE_FIND_VERSION VERSION_GREATER PACKAGE_VERSION)
-IF (PACKAGE_VERSION_UNSUITABLE)
-  MESSAGE("VERSION CHECK FAILED FOR ${PACKAGE_FIND_NAME}. WANTED ${PACKAGE_FIND_VERSION}, HAVE ${PACKAGE_VERSION}")
-ENDIF(PACKAGE_VERSION_UNSUITABLE)
diff --git a/src/modules/packagekit-qt5-config.cmake.in b/src/modules/packagekit-qt5-config.cmake.in
new file mode 100644
index 0000000..3574690
--- /dev/null
+++ b/src/modules/packagekit-qt5-config.cmake.in
@@ -0,0 +1,11 @@
+# - Config information for PackageKit-Qt5
+# This file defines:
+#
+#  PACKAGEKIT_QT5_INCLUDE_DIR - the PackageKitQt5 include directory
+#  PACKAGEKIT_QT5_LIBRARIES - Link these to use PackageKitQt5
+
+SET(prefix "@CMAKE_INSTALL_PREFIX@")
+SET(exec_prefix "@CMAKE_INSTALL_PREFIX@")
+SET(PACKAGEKIT_QT5_LIBRARIES "@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@/libpackagekit-qt5.so" CACHE FILEPATH "Libraries for PackageKit-Qt5")
+SET(PACKAGEKIT_QT5_INCLUDE_DIR "@CMAKE_INSTALL_PREFIX@/include/PackageKit/packagekit-qt5" CACHE PATH "Include path for PackageKit-Qt5")
+SET(PACKAGEKIT_QT5_FOUND "TRUE")
diff --git a/src/packagekit-qt2.pc.in b/src/packagekit-qt2.pc.in
index 787db22..ca63c61 100755
--- a/src/packagekit-qt2.pc.in
+++ b/src/packagekit-qt2.pc.in
@@ -6,6 +6,6 @@
 Name: packagekit-qt2
 Description: PackageKit is a system daemon for installing stuff.
 Version: @VERSION@
-Requires: @PKGCONFIG_REQUIRES@
+Requires: QtCore, QtDBus, QtSql, QtXml
 Libs: -L${libdir} -lpackagekit-qt2
 Cflags: -I${includedir}/PackageKit/packagekit-qt2
diff --git a/src/packagekit-qt5.pc.in b/src/packagekit-qt5.pc.in
new file mode 100755
index 0000000..1c4f96a
--- /dev/null
+++ b/src/packagekit-qt5.pc.in
@@ -0,0 +1,11 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
+libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/include
+
+Name: packagekit-qt5
+Description: PackageKit is a system daemon for installing stuff.
+Version: @VERSION@
+Requires: Qt5Core, Qt5DBus, Qt5Sql, Qt5Xml
+Libs: -L${libdir} -lpackagekit-qt5
+Cflags: -I${includedir}/PackageKit/packagekit-qt5
diff --git a/src/transaction.cpp b/src/transaction.cpp
index e9966c9..95076cd 100755
--- a/src/transaction.cpp
+++ b/src/transaction.cpp
@@ -66,6 +66,15 @@
     d->connectedSignals << signal;
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+void Transaction::connectNotify(const QMetaMethod &signal)
+{
+    // ugly but recommended way to convert a methodSignature to a SIGNAL
+    connectNotify(QString("2%1")
+                  .arg(QLatin1String(signal.methodSignature())).toLatin1());
+}
+#endif
+
 void Transaction::disconnectNotify(const char *signal)
 {
     Q_D(Transaction);
@@ -77,6 +86,15 @@
     }
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+void Transaction::disconnectNotify(const QMetaMethod &signal)
+{
+    // ugly but recommended way to convert a methodSignature to a SIGNAL
+    disconnectNotify(QString("2%1")
+                     .arg(QLatin1String(signal.methodSignature())).toLatin1());
+}
+#endif
+
 void TransactionPrivate::setupSignal(const QString &signal, bool connect)
 {
     Q_Q(Transaction);
diff --git a/src/transaction.h b/src/transaction.h
index ad1f14e..e9ace0a 100644
--- a/src/transaction.h
+++ b/src/transaction.h
@@ -1353,6 +1353,9 @@
      * otherwise no signals will be emitted
      */
     virtual void connectNotify(const char *signal);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    virtual void connectNotify(const QMetaMethod &signal);
+#endif
 
     /**
      * This method disconnects from DBus signals
@@ -1360,6 +1363,9 @@
      * otherwise no signals will be disconnected
      */
     virtual void disconnectNotify(const char *signal);
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+    virtual void disconnectNotify(const QMetaMethod &signal);
+#endif
 
     TransactionPrivate * const d_ptr;
 
