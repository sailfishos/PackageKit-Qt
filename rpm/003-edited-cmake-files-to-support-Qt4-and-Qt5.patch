From d2f049e802c385fe824c83f61d27e376bb85d5ef Thu, 1 Dec 2016 10:33:09 +0100
From: Martin Grimme <martin.grimme@gmail.com>
Date: Thu, 27 Jun 2013 20:50:49 +0200
Subject: [PATCH] edited cmake files to support Qt4 and Qt5


diff --git a/CMakeLists.txt b/CMakeLists.txt
old mode 100644
new mode 100755
index 7a0713c..ace2dc2
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,8 +24,7 @@
 #
 # Options
 #
-
-# NONE
+option(USE_QT5 "Build against Qt5 instead of Qt4." OFF)
 
 if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
   set(CMAKE_INSTALL_PREFIX
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 52f7d58..6a1e2e7 100755
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1,22 +1,33 @@
 # CMakeLists for PackageKit-Qt library
 
-find_package(Qt5Core REQUIRED)
-find_package(Qt5DBus REQUIRED)
-find_package(Qt5Sql REQUIRED)
+if (USE_QT5)
+  find_package(Qt5Core REQUIRED)
+  set(Qt5_FOUND YES)
+else ()
+  find_package(Qt4 REQUIRED)
+  set(Qt4_FOUND YES)
+endif ()
 
-# Set up Qt5
-set(QT_USE_QTDBUS TRUE)
-set(QT_USE_QTSQL TRUE)
-set(QT_DONT_USE_QTGUI TRUE)
+# Set up Qt
+if (Qt5_FOUND)
+  find_package(Qt5DBus REQUIRED)
+  find_package(Qt5Sql REQUIRED)
+  set(CMAKE_AUTOMOC TRUE)
 
-set(CMAKE_AUTOMOC TRUE)
+  include_directories(${Qt5Core_INCLUDE_DIRS}
+                      ${Qt5DBus_INCLUDE_DIRS}
+                      ${Qt5Sql_INCLUDE_DIRS}
+  )
+elseif (Qt4_FOUND)
+  set(QT_USE_QTDBUS TRUE)
+  set(QT_USE_QTSQL TRUE)
+  set(QT_DONT_USE_QTGUI TRUE)
+  include(${QT_USE_FILE})
+endif ()
 
 include_directories(${CMAKE_BINARY_DIR}
 		    ${CMAKE_CURRENT_BINARY_DIR}
 		    ${CMAKE_CURRENT_SOURCE_DIR}
-                    ${Qt5Core_INCLUDE_DIRS}
-                    ${Qt5DBus_INCLUDE_DIRS}
-                    ${Qt5Sql_INCLUDE_DIRS}
 )
 
 set(packagekitqt_HEADERS
@@ -52,12 +63,18 @@
 endif ()
 
 set_source_files_properties(${PK_INTERFACE_XML} PROPERTIES CLASSNAME DaemonProxy)
-qt5_add_dbus_interface(packagekitqt_SRC ${PK_INTERFACE_XML} daemonproxy)
-
 set_source_files_properties(${PK_TRANSACTION_INTERFACE_XML} PROPERTIES CLASSNAME TransactionProxy)
-qt5_add_dbus_interface(packagekitqt_SRC ${PK_TRANSACTION_INTERFACE_XML} transactionproxy)
 
-qt5_wrap_cpp(packagekitqt_MOC_SRC ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
+if (Qt5_FOUND)
+  qt5_add_dbus_interface(packagekitqt_SRC ${PK_INTERFACE_XML} daemonproxy)
+  qt5_add_dbus_interface(packagekitqt_SRC ${PK_TRANSACTION_INTERFACE_XML} transactionproxy)
+  qt5_wrap_cpp(packagekitqt_MOC_SRC ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
+elseif (Qt4_FOUND)
+  qt4_add_dbus_interface(packagekitqt_SRC ${PK_INTERFACE_XML} daemonproxy)
+  qt4_add_dbus_interface(packagekitqt_SRC ${PK_TRANSACTION_INTERFACE_XML} transactionproxy)
+  qt4_automoc(${packagekitqt_SRC})
+  qt4_wrap_cpp(packagekitqt_MOC_SRC ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
+endif ()
 
 add_library(packagekit-qt2 SHARED ${packagekitqt_SRC} ${packagekitqt_HEADERS} ${packagekitqt_HEADERS_PRIVATE})
 set_target_properties(packagekit-qt2 PROPERTIES VERSION ${QPACKAGEKIT_VERSION} SOVERSION ${QPACKAGEKIT_API_LEVEL})
